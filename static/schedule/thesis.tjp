/*
 * This file contains a project skeleton. It is part of the
 * TaskJuggler project management tool. You can use this as a basis to
 * start your own project file.
 */
project thesis "Thesis dissertation"  2023-10-23-0:00-+0200 +30m {
  # Set the default time zone for the project. If not specified, UTC
  # is used.
  timezone "Europe/Rome"
  # Hide the clock time. Only show the date.
  timeformat "%Y-%m-%d"
  # Use US format for numbers
  numberformat "-" "" "," "." 1
  # Use US financial format for currency values. Don't show cents.
  currencyformat "(" ")" "," "." 0
  # Pick a day during the project that will be reported as 'today' in
  # the project reports. If not specified, the current day will be
  # used, but this will likely be outside of the project range, so it
  # can't be seen in the reports.
  now 2023-10-15
  # The currency for all money values is the Euro.
  currency "EURO"

  # You can define multiple scenarios here if you need them.
  #scenario plan "Plan" {
  #  scenario actual "Actual"
  #}

  # You can define your own attributes for tasks and resources. This
  # is handy to capture additional information about the project that
  # is not directly impacting the project schedule, but which you like to
  # keep in one place.
  #extend task {
  #  reference spec "Link to Wiki page"
  #}
  #extend resource {
  #  text Phone "Phone"
  #}
}

copyright "Claim your rights here"

# If you have any text block that you need multiple times to describe
# your project, you should define a macro for it. Macros can even have
# variable segments that you can set upon calling the macro.
#
# macro Task [
#   task "A ${1} task" {
#   }
# ]
#
# Can be called as
# ${Task "big"}
# to generate
# task "A big task" {
# }

# You can attach flags to accounts, resources and tasks. These can be
# used to filter out subsets of them during reporting.
flags important, hidden

# If you want to do budget planning for your project, you need to
# define some accounts.
account cost "Project Cost" {
  account dev "Development"
  account doc "Documentation"
}
account rev "Customer Payments"

# The Profit & Loss analysis should be rev - cost accounts.
balance cost rev

# Define your public holidays here.
#vacation "New Year's Day" 2017-01-01
#vacation "Birthday of Martin Luther King, Jr." 2012-01-16
#vacation "Washington's Birthday" 2012-02-20
#vacation "Memorial Day" 2012-05-28
#vacation "Independence Day" 2012-07-04
#vacation "Labor Day" 2012-09-03
#vacation "Columbus Day" 2012-10-08
#vacation "Veterans Day" 2012-11-12
#vacation "Thanksgiving Day" 2012-11-22
#vacation "Christmas Day" 2016-12-25

# The daily default rate of all resources. This can be overridden for each
# resource. We specify this so we can do a good calculation of
# the costs of the project.
rate 400.0

# This is a set of example resources.
#resource r1 "Resource 1"
#resource t1 "Team 1" {
#  managers r1
#  resource r2 "Resource 2"
#  resource r3 "Resource 3"
#}

resource boss "Luis de Marcos" {
  email "luis.demarcos@uah.es"
  rate 480
}
resource dev "PhD students" {
  managers boss
  resource dev1 "Pedro Hern√°ndez" {
    email "pedro.hernandezr@edu.uah.es"
    rate 350.0
  }
}

# This is a resource that does not do any work.
resource s1 "System 1" {
  efficiency 0.0
  rate 600.0
}

task project "Schedule" {
  task wp1 "Work proposal (updating)" {
  	start 2023-10-23
  	#allocate dev1
    task t1 "Setting up exchange" {
    	duration 2w
    }
    #task t2 "Formulate research questions" {
    #	duration 3m
    #}
    #task t3 "Literature review" {
    #	duration 3m
    #}
    #task t4 "Formulate research strategy, research design and select methods" {
    #	duration 3m
    #}
    #task t5 "Write research proposal (final version)" {
    #	duration 3m
    #}
  }
  #task wp2 "Cotutorship agreement? (Spanish university)" {
  #	start 2024-04-01
  # 	#allocate dev
  #  task t1 "Documentation" {
  #  	duration 3m
  #  }
  #}
  #task wp3 "Literature review" {
  #	start 2020-03-01
  #  #allocate dev1
  #  task t1 "Deeper state-of-the-art research on topic" {
  #  	duration 6m
  #  }
  #}
  task wp2 "1st project (loyalty program)" {
  	start 2023-11-06
    #depends !wp2
    allocate dev1
    task t1 "Development" {
    	duration 4w
    }
  }
  task ms1 "Loyalty program deployment" {
      depends !wp2
  }
  task wp3 "2nd project (AI model)" {
  	start 2023-12-04
    #depends !wp3
    allocate dev1
    task t1 "Development" {
    	duration 12w
    }
  }
  task ms2 "AI model deployment" {
      depends !wp3
  }
  #task wp4 "Interruption?" {
  #  start 2024-02-26
  #  #depends !wp4
  #  allocate dev1
  #  task t1 "Development" {
  #    duration 7w
  #  }
  #}
  #task wp5 "3rd project (credentials verification)" {
  #  start 2024-04-15
  #  #depends !wp4
  #  allocate dev1
  #  task t1 "Development" {
  #    duration 8w
  #  }
  #}
  task wp4 "3rd project (credentials verification)" {
  	start 2024-02-26
    #depends !wp4
    allocate dev1
    task t1 "Development" {
    	duration 8w
    }
  }
  task ms3 "Credentials verification deployment" {
      depends !wp4
  }
  task ms4 "End exchange" {
      depends !wp4
  }
  task deliveries "EYE reporting" {
    task "Report 1" {
      start 2023-11-15
      duration 1d
    }
    task "Report 2" {
      start 2023-11-30
      duration 1d
    }
    task "Report 3" {
      start 2023-12-15
      duration 1d
    }
    task "Report 4" {
      start 2023-12-30
      duration 1d
    }
    task "Report 5" {
      start 2024-01-15
      duration 1d
    }
    task "Report 6" {
      start 2024-01-30
      duration 1d
    }
    task "Report 7" {
      start 2024-02-15
      duration 1d
    }
 }
 task artifacts "EYE outcomes" {
    task "Marketing plan" {
      start 2023-11-06
      duration 8w
    }
    task "EU AI Act & GDPR (presentation)" {
      start 2024-01-01
      duration 8w
    }
    task "Business plan" {
      start 2024-02-26
      duration 8w
    }
 }
}

# Now the project has been specified completely. Stopping here would
# result in a valid TaskJuggler file that could be processed and
# scheduled. Here reports will be generated to visualize the
# results.

navigator navbar {
  hidereport 0
}

macro TaskTip [
  tooltip istask() -8<-
    '''Start: ''' <-query attribute='start'->
    '''End: ''' <-query attribute='end'->
    ----
    '''Resources:'''

    <-query attribute='resources'->
    ----
    '''Precursors: '''

    <-query attribute='precursors'->
    ----
    '''Followers: '''

    <-query attribute='followers'->
    ->8-
]

textreport frame "" {
  header -8<-
    == TaskJuggler Project Template ==
    <[navigator id="navbar"]>
  ->8-
  footer "----"
  textreport index "Overview" {
    formats html
    center '<[report id="overview"]>'
  }

  textreport "Status" {
    formats html
    center -8<-
      <[report id="status.dashboard"]>
      ----
      <[report id="status.completed"]>
      ----
      <[report id="status.ongoing"]>
      ----
      <[report id="status.future"]>
    ->8-
  }

  textreport wps "Work packages" {
    textreport wp1 "Work package 1" {
      formats html
      center '<[report id="wp1"]>'
    }

    textreport wp2 "Work package 2" {
      formats html
      center '<[report id="wp2"]>'
    }
  }

  textreport "Artifacts" {
    formats html
    center '<[report id="artifacts"]>'
  }

  textreport "Deliveries" {
    formats html
    center '<[report id="deliveries"]>'
  }

  textreport "ContactList" {
    formats html
    title "Contact List"
    center '<[report id="contactList"]>'
  }
  textreport "ResourceGraph" {
    formats html
    title "Resource Graph"
    center '<[report id="resourceGraph"]>'
  }
}

# A traditional Gantt chart with a project overview.
taskreport overview "" {
  header -8<-
    === Project Overview ===

    The project is structured into 2 work packages.

    # Specificationsk
    # <-reportlink id='frame.wps.wp1'->
    # <-reportlink id='frame.wps.wp2'->
    # Testing

    === Original Project Plan ===
  ->8-
  columns bsi { title 'WBS' },
          name, start, end, 
          #effort, cost, revenue, 
          chart { 
          	${TaskTip} 
          	scale month
          }
  # For this report we like to have the abbreviated weekday in front
  # of the date. %a is the tag for this.
  timeformat "%d-%m-%Y"
  loadunit months
  hideresource 1
  balance cost rev
  caption 'All effort values are in man months.'

  footer -8<-
    === Staffing ===

    All project phases are properly staffed. See [[ResourceGraph]] for
    detailed resource allocations.

    === Current Status ===

    Some blurb about the current situation.
  ->8-
}

# Macro to set the background color of a cell according to the alert
# level of the task.
macro AlertColor [
  cellcolor plan.alert = 0 "#00D000" # green
  cellcolor plan.alert = 1 "#D0D000" # yellow
  cellcolor plan.alert = 2 "#D00000" # red
]

taskreport status "" {
  columns bsi { width 50 title 'WBS' }, name { width 150 },
          start { width 100 }, end { width 100 },
          effort { width 100 },
          alert { tooltip plan.journal
                          != '' "<-query attribute='journal'->" width 150 },
          status { width 150 }

  taskreport dashboard "" {
    headline "Project Dashboard (<-query attribute='now'->)"
    columns name { title "Task" ${AlertColor} width 200},
            resources { width 200 ${AlertColor}
                        listtype bullets
                        listitem "<-query attribute='name'->"
                        start ${projectstart} end ${projectend} },
            alerttrend { title "Trend" ${AlertColor} width 50 },
            journal { width 350 ${AlertColor} }
    journalmode status_up
    journalattributes headline, author, date, summary, details
    hidetask ~hasalert(0)
    sorttasks alert.down, plan.end.up
    period %{${now} - 1w} +1w
  }
  taskreport completed "" {
    headline "Already completed tasks"
    hidetask ~(plan.end <= ${now})
  }
  taskreport ongoing "" {
    headline "Ongoing tasks"
    hidetask ~((plan.start <= ${now}) & (plan.end > ${now}))
  }
  taskreport future "" {
    headline "Future tasks"
    hidetask ~(plan.start > ${now})
  }
}

# A list of tasks showing the resources assigned to each task.
taskreport wp1 "" {
  headline "Work package 1 - Resource Allocation Report"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
  taskroot project.wp1
}
# A list of tasks showing the resources assigned to each task.
taskreport wp2 "" {
  headline "Work package 2 - Resource Allocation Report"
  columns bsi { title 'WBS' }, name, start, end, effort { title "Work" },
          duration, chart { ${TaskTip} scale day width 500 }
  timeformat "%Y-%m-%d"
  hideresource ~(isleaf() & isleaf_())
  sortresources name.up
  taskroot project.wp2
}

# A list of all tasks with the percentage completed for each task
taskreport artifacts "" {
  headline "Project Artifacts"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete,
          chart { ${TaskTip} }
  taskroot project.artifacts
  hideresource 1
}
# A li

# A list of all tasks with the percentage completed for each task
taskreport deliveries "" {
  headline "Project Deliverables"
  columns bsi { title 'WBS' }, name, start, end, note { width 150 }, complete,
          chart { ${TaskTip} }
  taskroot project.deliveries
  hideresource 1
}
# A list of all employees with their contact details.
resourcereport contactList "" {
  headline "Contact list and duty plan"
  columns name,
          email { celltext 1 "[mailto:<-email-> <-email->]" },
          managers { title "Manager" },
          chart { scale day }
  hideresource ~isleaf()
  sortresources name.up
  hidetask 1
}

# A graph showing resource allocation. It identifies whether each
# resource is under- or over-allocated for.
resourcereport resourceGraph "" {
  headline "Resource Allocation Graph"
  columns no, name, effort, rate, weekly { ${TaskTip} }
  loadunit shortauto
  # We only like to show leaf tasks for leaf resources.
  hidetask ~(isleaf() & isleaf_())
  sorttasks plan.start.up
}
